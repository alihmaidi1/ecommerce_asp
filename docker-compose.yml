version: "3.0"
 
services:
  api:
    build:
      context: .
      dockerfile: dockerfile
    image: alihmaidi/asp_ecommerce
    ports:
      - "8000:80"
    
    depends_on:
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started
        restart: true
      elasticsearch :
        condition: service_started
        restart: true
    

      
    
  
  db:
    image: "mcr.microsoft.com/mssql/server"
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "S3cur3P@ssW0rd!"
      ACCEPT_EULA: "Y"
    healthcheck:
      test:  /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "S3cur3P@ssW0rd!" -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 3s
      retries: 20
      start_period: 10s

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf
    depends_on:
      - api

  redis:
    image: redis
    ports:
      - "6379:6379"      

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
    ports:
      - 9200:9200
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/datafile
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    networks:
     - elasticsearch
  
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.16.1
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
    networks:
     - elasticsearch

networks:
  elasticsearch:
    driver: bridge